angular achtige samenvatting i guess

------commandos------
(installeren) npm install -g @angular/cli
nieuw project: ng new news --routing
opstarten: in projectmap ng serve
component maken: ng generate component naamcomponent
service maken: ng generate service naamservice
  <base href="/"> zetten in index.html anders zie je nietn

----algemene dingen-----

<app-notification></app-notification> zetten om ja een component te zetten eh

variabelen gebruiiken (html): {{datum}}
		       (ts): export class ..{ datum = '24/5/2022'}
@Input krijgt dingen mee van <app-notification boodschap="blablabla"></app-notification
@Input() boodschap: string = ''; INPUT VOOR ELKE VARIABELE

<app-notification  *ngFor="let notification of notifications" boodschap={{notification.message}}></app-notification>
zo maak je een notification, de inputs moeten wel blijven, je kan geen objecten meegeven met input (denkik dan toch zo stil in mijn hoofdje zo)


-------routing-------
in routing.module.ts: const routes: 

const routes: Routes = [
  { path: 'overview', component: OverviewComponent }
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule { }

en routerlink zetten ipv href in de a

en in elke component <base href="overview"> zetten HOOFDLETTERGEVOELIG DUS LET OP EH BROERES
<div class="media" routerLink="notification/{{id}}"> voor aparte ids
  { path: 'notification/:id', component: NotificationDetailComponent }
<base href="notification/id">

constructor( private route: ActivatedRoute) { }
  id = 0
  ngOnInit(): void {

    // @ts-ignore
    this.id = +this.route.snapshot.paramMap.get('id');
    console.log(this.route.snapshot.paramMap);
}


-----two way binding----
    FormsModule toevoegen aan de imports in app.module.ts
<input type="number"  [(ngModel)]="temperatuur"/> wordt op input velden de data aangepast
iemand zeg me wat ngvalue just is
ngvalue is denkik alleen bij options?

----events-----
(click)="veranderdLand()" voert de functie veranderland uit

in ts: 
veranderdLand() {
console.log(doeiets)
}


----service-----


in service 
constructor(private http: HttpClient) { }

met promise:
getNotifications(id): Promise<{'id', 'message', 'icon'}> {
    return new Promise((resolve, reject) => {
        this.http.get('http://www.mocky.io/v2/5be453402f00002c00d9f48f').subscribe(
          res => {
            /* tslint:disable:no-string-literal */
            /* tslint:enable:no-string-literal */
            // @ts-ignore
            resolve(res['notifications']);
          });
    });
  }

in component
constructor( private notificationSerive: NotificationServiceService) { }

 this.notificationSerive.getNotification(this.id)
      .then(result => {
        this.message = result.message;
        this.icon = result.icon;
      });

IN APP.MODULE!!!!!

 imports: [
    BrowserModule,
    AppRoutingModule,
    HttpClientModule
  ],
  providers: [NewsService],